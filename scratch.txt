
###########################################################


_cells_begin-html() {
	<table style="empty-cells: show; border-spacing: 0px; border: 1px solid black">
}

_cells_end-html() {
	</table>
}

_cells_row_begin-html() {
	<tr>
}

_cells_row_end-html() {
	</tr>
}

_cells_speck_begin-html() {
	<td style="border-spacing: 0px; border: 1px solid black">
}

_cells_speck_end-html() {
	</td>
}


_cells_begin-mediawiki() {
	{| class="wikitable"
}

_cells_end-mediawiki() {
	|}
}

_cells_row_begin-mediawiki() {
	
}

_cells_row_end-mediawiki() {
	|-
}

_cells_speck_begin-mediawiki() {
	|<!-- -->
	
}

_cells_speck_end-mediawiki() {
	
}





_paragraph_begin-html() {
	<p>
}

_paragraph_end-html() {
	</p>
}


_paragraph_begin-mediawiki() {
	
	
}

_paragraph_end-mediawiki() {
	
	
}







<table style="empty-cells: show; border-spacing: 0px; border: 1px solid black">
	{| class="wikitable"

<tr>
	

</tr>
	|-

<td style="border-spacing: 0px; border: 1px solid black">
	|
	

</td>
	

</table>
	|}


<table style="empty-cells: show; border-spacing: 0px; border: 1px solid black">
<tr> <td style="border-spacing: 0px; border: 1px solid black"> x </td> <td style="border-spacing: 0px; border: 1px solid black"></td> </tr>
<tr> <td style="border-spacing: 0px; border: 1px solid black"> z </td> </tr>
</table>


{| class="wikitable"
|<!-- -->x
|<!-- -->
|<!-- -->-
|<!-- -->z
|}

###########################################################


#LibreOffice 'odt', 'docx', etc, conversion, automatically by shell code. From 'soffice', the result seems nearly usable, with a few exceptions.
# *) Page breaks. Severe bug, unacceptable.
# *) Image stroage. LibreOffice may not store images in the document. If relying on absolute paths, severe bug, unacceptable.
# *) Image paths. Apparently LibreOffice infers and uses absolute paths, searching for images from ' ../ ' instead of ' ./ ' .
# *) Image widths. Possibly the 'pixels' and 'percentage' values have been confused for some other unit (eg. centimeters, inches, etc).




wkhtmltopdf scriptedIllustrator_presentation.html scriptedIllustrator.pdf


pandoc scriptedIllustrator.html --pdf-engine=wkhtmltopdf -o scriptedIllustrator.pdf

pandoc scriptedIllustrator.html -t docx -o scriptedIllustrator.docx


soffice --headless --infilter=writerglobal8_HTML  --convert-to pdc:writer_web_pdf_Export --outdir ./ ./scriptedIllustrator.html

soffice --headless --infilter=writerglobal8_HTML  --convert-to odt --outdir ./ ./scriptedIllustrator.html


#writerglobal8_HTML
#generic_HTML
#writerweb8_writer
#graphic_html
#draw_html_export
#writer_web_HTML_help



pandoc -f mediawiki ./scriptedIllustrator.mediawiki.txt -t docx -o test.docx



# https://stackoverflow.com/questions/41784693/python-docx-inserting-html-into-docx
#from htmldocx import HtmlToDocx
#new_parser = HtmlToDocx()
#new_parser.parse_html_file("html_filename", "docx_filename")
#  Did not seem particularly accurate, may not be promising for 'python-docx' either.



###########################################################














